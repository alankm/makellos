core:
	// Includes raft, a webserver, and a database. Also loads the config
	// file and provides access to it for all modules.

	New(config string) *Core
	(c *Core) Start()
	(c *Core) Stop()
	(c *Core) Register(module Module)

	(c *Core) AuthorizationHook()
	(c *Core) LoggingHook(post func(Log))

module:
	Init
	Register State Machine
	Register Subroutes

shared:
	// An interface to enable method sharing between core and various
	// modules. Without any import cycles.

	type Rules struct {
		owner string
		group string
		mode  string
	}

	type Log struct	{
		severity string
		rules	 Rules
		code	 string
		message  string
		args 	 map[string]string
	}

	type Session interface {
		...
	}

	AuthorizationFunctions{
		Login 	  func(username, password string) Session
		LoginHash func(username, hashword string) Session
		Rules
		Read
		Write
		Exec
		Mkdir
		Mkfile
		Delete
		Chown
		Chgrp
		Chmod
	}

	ProtectedHandler()
	AuthorizationHook()
	LoggingHook(post func(Log))
	Log
	Authorization Functions











Vorteil (main)

Core
	Database
	Raft
	Webserver
	Config File Loader
	Register Module Version Family
		Register Module

Shared
	Core
		Overwrite Privileges
		Overwrite Messages
		Privileges
			Read
			Write
			Execute
		Messages
			Post
	Module Interface
		State Machine
		Web Service




Login
Privileges
Messages
Images
Configs
Apps
Bundles
Deployments
